components:
  schemas:
    BadRequest:
      properties:
        msg:
          type: string
      type: object
    NotFound:
      properties:
        msg:
          type: string
      type: object
    FavoriteQuickstart:
      properties:
        accountId:
          type: string
        createdAt:
          format: date-time
          type: string
        deletedAt: {}
        favorite:
          type: boolean
        id:
          minimum: 0
          type: integer
        quickstartName:
          type: string
        updatedAt:
          format: date-time
          type: string
      type: object
    HelpTopic:
      properties:
        content:
          format: byte
          type: object
        createdAt:
          format: date-time
          type: string
        deletedAt:
          format: date-time
          oneOf:
          - type: "null"
          - type: string
          type: string
        groupName:
          type: string
        id:
          minimum: 0
          type: integer
        name:
          type: string
        tags:
          items:
            $ref: '#/components/schemas/Tag'
          type: array
        updatedAt:
          format: date-time
          type: string
      type: object
    Quickstart:
      properties:
        content:
          format: byte
          type: object
        createdAt:
          format: date-time
          type: string
        deletedAt:
          format: date-time
          oneOf:
          - type: "null"
          - type: string
          type: string
        favoriteQuickstart:
          items:
            $ref: '#/components/schemas/FavoriteQuickstart'
          type: array
        id:
          minimum: 0
          type: integer
        name:
          type: string
        tags:
          items:
            $ref: '#/components/schemas/Tag'
          type: array
        updatedAt:
          format: date-time
          type: string
      type: object
    QuickstartProgress:
      properties:
        accountId:
          type: integer
        progress:
          type: object
          additionalProperties: true
        quickstartName:
          type: string
      type: object
    QuickstartProgressRequest:
      properties:
        accountId:
          type: integer
        progress:
          type: object
          additionalProperties: true
        quickstartName:
          type: string
      required:
        - accountId
        - quickstartName
      type: object
    Tag:
      properties:
        createdAt:
          format: date-time
          type: string
        deletedAt:
          format: date-time
          oneOf:
          - type: "null"
          - type: string
          type: string
        id:
          minimum: 0
          type: integer
        type:
          type: string
        updatedAt:
          format: date-time
          type: string
        value:
          type: string
      type: object
  parameters:
      ProductFamilies:
        name: product-families
        description: If set, content is associated with a specific CRC product families
        in: query
        required: false
        schema:
          type: array
          items:
            type: string
        explode: true
        style: form
      Content:
        name: content
        description: If set, content is associated with a specific CRC content
        in: query
        required: false
        schema:
          type: array
          items:
            type: string
        explode: true
        style: form
      UseCase:
        name: use-case
        description: If set, content is associated with a specific CRC use case
        in: query
        required: false
        schema:
          type: array
          items:
            type: string
        explode: true
        style: form
      Bundle:
        name: bundle
        description: If set, content is associated with a specific CRC bundle
        in: query
        required: false
        schema:
          type: array
          items:
            type: string
        explode: true
        style: form
      Application:
        name: application
        description: If set, content is associated with a specific CRC application
        in: query
        required: false
        schema:
          type: array
          items:
            type: string
        explode: true
        style: form
      Name:
        name: name
        description: Search content by name
        in: query
        required: false
        schema:
          type: array
          items:
            type: string
        explode: true
        style: form
      Limit:
        name: limit
        description: Pagination limit
        in: query
        required: false
        schema:
          type: integer
        explode: true
        style: form
      Offset:
        name: offset
        description: Pagination offset
        in: query
        required: false
        schema:
          type: integer
        explode: true
        style: form
      Id:
        name: id
        description: identifier
        in: path
        required: true
        schema:
          type: integer
      TopicName:
        name: name
        description: identifier
        in: path
        required: true
        schema:
          type: string
      Account:
        name: account
        description: Account number
        in: query
        required: true
        schema:
          type: string
      Kind:
        name: kind
        description: If set, content is associated with a specific kind
        in: query
        required: false
        schema:
          type: array
          items:
            type: string
        explode: true
        style: form
      Topic:
        name: topic
        description: If set, content is associated with a specific topic
        in: query
        required: false
        schema:
          type: array
          items:
            type: string
        explode: true
        style: form
      QuickstartName:
        name: name
        description: Search quickstarts by name
        in: query
        required: false
        schema:
          type: string
        explode: true
        style: form
      DisplayName:
        name: display-name
        description: Search quickstarts by display name
        in: query
        required: false
        schema:
          type: string
        explode: true
        style: form
info:
  license:
    name: MIT
  title: quickstarts
  version: 1.0.0
openapi: 3.0.0
paths:
  /quickstarts:
    get:
      summary: Returns list of all quickstarts
      responses:
        '200':
          description: A JSON array of all quickstarts
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Quickstart'
      parameters:
      - $ref: '#/components/parameters/ProductFamilies'
      - $ref: '#/components/parameters/Content'
      - $ref: '#/components/parameters/UseCase'
      - $ref: '#/components/parameters/Bundle'
      - $ref: '#/components/parameters/Application'
      - $ref: '#/components/parameters/Kind'
      - $ref: '#/components/parameters/Topic'
      - $ref: '#/components/parameters/QuickstartName'
      - $ref: '#/components/parameters/DisplayName'
      - $ref: '#/components/parameters/Limit'
      - $ref: '#/components/parameters/Offset'      
  /quickstarts/{id}:
    get:
      summary: Return a quickstarts by ID
      parameters:
      - $ref: '#/components/parameters/Id'
      responses:
        '200':
          description: A JSON object with a single quickstart content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quickstart'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
  /helptopics:
    get:
      summary: Returns list of all help topics
      responses:
        '200':
          description: A JSON array of all help topics
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/HelpTopic'
      parameters:
      - $ref: '#/components/parameters/Bundle'
      - $ref: '#/components/parameters/Application'
      - $ref: '#/components/parameters/Name'
  /helptopics/{name}:
    get:
      summary: Return a help topics set by topic name
      parameters:
      - $ref: '#/components/parameters/TopicName'
      responses:
        '200':
          description: A JSON of a help topic set
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/HelpTopic'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
  /favorites:
    get:
      summary: Returns list of all favorites
      responses:
        '200':
          description: A JSON array of all favorites
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/FavoriteQuickstart'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
      parameters:
      - $ref: '#/components/parameters/Account'
    post:
      summary: Add a favorite
      parameters:
      - $ref: '#/components/parameters/Account'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FavoriteQuickstart'
      responses:
        '200':
          description: A JSON object with a single favorite content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FavoriteQuickstart'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
  /quickstarts/filters:
    get:
      summary: Returns filters for quickstarts
      responses:
        '200':
          description: A JSON object with filter data
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    additionalProperties: true
  /progress:
    get:
      summary: Returns list of progress records
      parameters:
      - name: account
        in: query
        required: true
        schema:
          type: string
        description: Filter by account
      - name: quickstart
        in: query
        required: false
        schema:
          type: string
        description: Filter by quickstart name
      responses:
        '200':
          description: A JSON array of progress records
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/QuickstartProgress'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
    post:
      summary: Create or update progress record
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuickstartProgressRequest'
      responses:
        '200':
          description: Progress record created/updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuickstartProgress'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
  /progress/{id}:
    delete:
      summary: Delete progress record by ID
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
        description: Progress record ID
      responses:
        '200':
          description: Progress record deleted
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '404':
          description: Progress record not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'

