# Name is an internal name. Title shows up in the UI as a side panel title.
# Tags to be kept empty for now. Tags will specify where in the app descriptions will be available.
# Links to be external only. We don't know yet whether referencing to other side panels will be supported but referencing to in-depth docs is expected to be supported.

- name: stonesoup-whatsnext-add-component 
  tags:
  title: Add more components 
  content: |-
    To extend your application, add source code to your repository. We'll build an image from this source code. 

    1. From the application dropdown, select **Add component**.
    2. When you add a component, the UI automatically starts a pipeline build. 
    3. To verify that the resulting pipeline builds successfully, open the **Activity > Pipeline runs** tab.

    For more details, see the [Adding more components](https://redhat-appstudio.github.io/docs.appstudio.io/Documentation/main/getting-started/get-started/#adding-more-components) how-to.


- name: stonesoup-whatsnext-customize-build-pipeline
  tags:
  title: Customize build pipeline 
  content: |-
    By customizing your build pipeline, you can change the included tasks, control when those tasks update to newer versions, and then ensure the changes to the pipeline are made only when you’re ready to accept the changes.
    These customizations also configure your repository to automatically build for each commit to this repository for both making and merging pull requests (PR).  
    For each component, you receive a PR that contains the default build pipeline definition. You can customize this build pipeline definition before or after you merge the PR.
    You cannot return to this default pipeline after you make customizations, but you can look at previous pipeline versions in Git. 

    Prerequisites 
    1. Install the GitHub application. 
    2. Authorize the GitHub application for this component's repository. 

    Procedure 
    1. From the application dropdown, select **Customize build pipeline**.
    * If you already own this build pipeline, you select **Edit build pipeline**.
    2. To customize the default build pipeline definition, go to the pull request sent to you and open the component’s source in GitHub. 
    3. Make your customizations. 
    4. Commit your changes, and as a result, a pipeline builds. 
    5. To verify that the resulting pipeline builds successfully, open the **Activity > Pipeline runs** tab.
    6. Open the **Overview** tab and merge your pull request.  
 

- name: stonesoup-whatsnext-install-github-app
  tags:
  title: Install our GitHub app
  content: |-
    To customize your build pipelines, install the GitHub app. After you install the GitHub app, it creates webhooks for your repositories and running builds. The GitHub app also tests your pull requests for you to view before merging your pull requests. 

    1. Go to the GitHub repository: [https://github.com/apps/rh-trusted-application-pipeline](https://github.com/apps/rh-trusted-application-pipeline). 
    2. Select **Install GitHub App**. 
    3. Select which of your repositories you want the GitHub app to have access to. 
    4. If you do not grant the GitHub app access to your repository, you must manually select each component for the GitHub app to access. 
    * Open **GitHub > Settings > Applications > Configure**.
    * Select each new component.   


- name: stonesoup-whatsnext-make-code-change
  tags:
  title: Make a code change
  content: |-
    Make a code change to your already configured components. In order to make a code change to your component, you must have:
    * Installed the GitHub app
    * Granted it permission to access your repository you want to change
    * Customized your component's pipeline
    The commit that includes your changes automatically triggers a build pipeline. If that pipeline is successful, it triggers a deployment to your development environment. 

    Prerequisites 
    Complete the instructions for: 
    1. Add a component
    2. Install the GitHub app 
    3. Customize build pipelines 

    Procedure:
    1. To verify that your build is completed or that your build is deployed, open the **Activity > Commit** tab. 
    2. Monitor the build progress. 
    3. View your code change in your running application. 
