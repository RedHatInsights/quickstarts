# Name is an internal name. Title displays in the UI as a side panel title.
# Leave tags empty for now. Tags will specify where in the app descriptions will be available.
# Links to be external only. We don't know yet whether referencing other side panels will be supported but referencing to in-depth docs is expected to be supported.
# Note that this topic is for LEARN MORE.

- name: rhtap-secrets-secrets
  tags:
  title: Secrets
  content: |-
    You can add a build or deployment secret at the workspace level to keep your data private. All secrets are stored using AWS Secrets Manager.  

    ## Secrets storage in AWS Secrets Manager
    All of your secrets are stored in AWS Secrets Manager so that only applications in your workspace can access them. To keep your application secure, avoid using environment variables to store your secrets because they send the contents of the secret back to publicly accessible repositories. 

    ## Deployment secrets
    Use deployment secrets after you build and deploy your application and the application is running on an environment. If your application relies on a database or other service, you can use a deployment secret to require and provide credentials to connect to them. With a deployment secret, you can have both a staging database and a production database and control access to each one individually.

    ## Source secrets for private repositories and parent images
    You can configure a source secret to give a builder pod access to your private repositories or parent images. With access to internal systems and services, the source secret fetches private repositories and parent images, providing a more secure framework.  

    ## Build secrets
    Build secrets facilitate authentication because they provide protected data, like credentials, to tasks in a component build pipeline.

      - Using Snyk
        A secret can provide Snyk with an authentication code so that Snyk can test each component build for vulnerabilities. If your component builds from an image in a private registry, you can also use a secret to provide Snyk with an access token so that it can pull that image. **Note:** You can use a Snyk task for static application security testing (SAST) scanning, but you must provide your own token to enable it; otherwise, the Snyk task is skipped.

      - Using Tidelift
        If you apply a secret to Tidelift, you can access a catalog of the open source packages that are available for your product development and environment. From the catalog, choose the packages that work best for your development needs. 

        For each repository, create a project in Tidelift and store the Tidelift key in the secrets infrastructure of your continuous integration (CI) system. 

    Now you can add secrets to your components or environments to maintain privacy and build and deploy your application. **Note:** If you need to change a secret, delete it and create a new one.










 

