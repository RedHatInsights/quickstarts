# Name is an internal name. Title shows up in the UI as a side panel title.
# Tags to be kept empty for now. Tags will specify where in the app descriptions will be available.
# Links to be external only. We don't know yet whether referencing to other side panels will be supported but referencing to in-depth docs is expected to be supported.
# Note that this topic is for LEARN MORE.

- name: rhtap-import-configure-component
  tags:
  title: Configure components
  content: |-
    We analyze your code, then define and apply deployment settings for each of your application components. Remember, a “component” is an image that we build from source code in a repository. An application is a collection of these components working together. 
    
    Before you create and deploy your application, look over the values and options that display here. You can rename any component from this view, too.

    - **Component name**: Is it correct? Click the GitHub link under this field if you want to check your repository URL. Save any changes to the name by clicking the checkmark. Discard the changes and exit editing mode by clicking the X.
    - **Runtime**: Did we detect the right one? If so, you should notice that we suggest suitable deployment options. If you want to change your runtime, expand the menu next to your runtime name and make a selection.
    
    In the **Build & deploy configuration** section, look over these items:
    - **Target port**: Is it correct? If not, click in the field to modify it.
    - **Dockerfile**: If you specified **Dockerfile** as your runtime, make sure we detected the right one. Click in the field if you need to modify it. Don't worry! We hide this field if you chose a different runtime.
    - **Default build pipeline**: This switch is on by default. Toggle the switch off to create a **Custom** build pipeline. **Default** and **Custom** build pipelines are triggered differently and include different tasks.
        - **Default** build pipelines are triggered manually and run faster by skipping some security checks and tests.
        - **Custom** build pipelines are triggered when you make commits to your source code repository. They run more tests than default pipelines, and you can customize which tasks are included. **NOTE:** To use a custom pipeline, you must be the owner of your repository so that you can authorize our application in your GitHub account and then grant it access to this repository. If someone else owns this repository, fork it, and use the new repo URL when adding the component.
    - **CPU** and **Memory**: Choose how many of each of these you want for your application, and in what unit, depending on your deployment requirements.
    - **Instances**: How many instances of this image do you want to deploy into an environment? Each instance requires its own resources.

    In the **Environment variables** section, enter a variable name and value to customize how we deploy your application. 
    
    If you defined your runtime environment variables in a devfile, we automatically extract them. Check that we detected them correctly when you configure your components for deployment.

    If you don’t use a devfile or it doesn’t include environment variables, you can add them manually in the **Environment variables** section fields.
    
    ***
    **WARNING**
    
    Avoid adding secrets as environment variables because we currently store them in `deployment.yaml` files in public GitHub repositories.
    
    ***

    When you’re satisfied with your component configuration settings, click **Create application**.

    ***
    **NOTE**

    After you create your application, you can adjust your configuration settings anytime you want from the **Application** view.

    ***
